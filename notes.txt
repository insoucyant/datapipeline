The work in weather project is from the following link:
https://www.youtube.com/watch?v=vMgFadPxOLk&t=966s


docker-compose up
docker-compose exec db psql -U db_user -d db 
# Now Inside Postgres
db-# 
#At this stage you may get docker permission denied. This is because Group Membership don't carry over to new terminal session unless we log out.
#In that case you can refresh the group membership for this new session with the following command
db-# newgrp docker 
db-# \l # List of all databses that we have
db-# \dn # List of all the schemas where datasets that exists inside of the db database. 
# What if we want to check other database?
db-# \c <name of db>
db-# \c postgres 
db-# \dn #Now we have schema of all  datasets within the database postgres.
db-# \c db # return to the db database 
db-# \dt public.* # This will list all the tables that exist within the public schema 
# After you run the insert records.py and just create the table in deb schema
db=# \dt dev.*
db=# SELECT * FROM dev.raw_weather_data; # There will be no data but the tab;le schema would be created.
db=# truncate table dev.raw_weather_data; # Deletes all record from the table.

#Airflow
For the ports, we will bind local port 8000 to the server's port 8080.
For the environment variables, We are going to overwrite AIRFLOW__DATABASE__SQL_ALCHEMY_CONN with the address of our desired database. 
We want to create a new database just for airflow so that it can store its metadata over there.
We also want to create a new user for airflow, so that it can have ownership over the new database.
Inside the postgres folder we want to create a new filr airflow_init.sql. 
We do not haver permission to make the file. Let's check the permission of the folder.
ls -l /home/sumit/repos/weather-data-project/postgres
drwx------ 19 dnsmasq root 4096 Sep 20 12:19 data
This 'dnsmasq' is the user inside the postgres container. All of the dashes mean we do not have any access at all.
Let us add the group write permission to this directory.


